set column_ratios 1,3,4
set preview_images false
# set preview_images_method iterm2
set colorscheme default
# set draw_borders true

set viewmode multipane

set dirname_in_tabs true
set tilde_in_titlebar false

map SS shell $HOME/.dotfiles/scripts/open_term.sh $(pwd)
# map SL shell $HOME/.dotfiles/scripts/macos/open_term_linux.sh $(pwd)
map Sl shell $HOME/.dotfiles/scripts/open_term.sh ssh arch -t "bash -ic \"cd /mnt/DarkNet/$(pwd);bash\""

setlocal path=~/Downloads sort ctime
setlocal path=~/Downloads sort_directories_first False

setlocal path=/Volumes/DarkNet/Downloads sort ctime
setlocal path=/Volumes/DarkNet/Downloads sort_directories_first False

# Global funcs
eval exec('def f_m(s,f): cmd("map g{0} cd {1}".format(s,f)); cmd("map t{0} tab_new {1}".format(s,f)); cmd("map m{0} shell mv -v %s {1}".format(s,f));\nglobals()["f_m"] = f_m')
eval exec('import platform; globals()["_platform"] = platform.system()')

# Folders
#eval exec('globals()["f_map"] = lambda s,f: (cmd("map g{0} cd {1}".format(s,f)),cmd("map t{0} tab_new {1}".format(s,f)),cmd("map m{0} shell mv -v %s {1}".format(s,f)))')

# f_m(<key>, <dir>)
#
# Maps:
#   g + <key> -> go to directory <dir>
#   t + <key> -> go to directory <dir> in new tab
#   m + <key> -> move selected files to directory <dir>

eval f_m("c","~/ctf")
eval f_m("h","~")
eval f_m("d","~/Desktop")
eval f_m("o","~/Downloads")
eval f_m("O","/Volumes/DarkNet/Downloads")
eval f_m("u","~/uni")
eval f_m("w","~/wargames")
eval f_m("tw","~/wargames/pwnable.tw")
eval f_m("kr","~/wargames/pwnable.kr")
eval f_m("v","/Volumes/VMNet/")
eval f_m("s","/Volumes/VMNet/SHARED")
#eval f_m("su64","/Volumes/VMNet/SHARED/u64")
#eval f_m("sa32","/Volumes/VMNet/SHARED/a32")
#eval f_m("sa64","/Volumes/VMNet/SHARED/a64")

eval cmd("map D shell trash %s") if _platform == "Darwin" else cmd("map D console delete")

map X extract
map C console compress%space

map U umount
map M console mount%space

map cw eval fm.execute_console("bulkrename") if fm.thisdir.marked_items else fm.open_console("rename ")
map <C-p> fzf_select
